[{"D:\\form-validator\\src\\index.js":"1","D:\\form-validator\\src\\App.js":"2","D:\\form-validator\\src\\FormSingup.js":"3","D:\\form-validator\\src\\useForm.js":"4","D:\\form-validator\\src\\validateInfo.js":"5","D:\\form-validator\\src\\Form.js":"6","D:\\form-validator\\src\\FormSuccess.js":"7"},{"size":199,"mtime":1606554136528,"results":"8","hashOfConfig":"9"},{"size":154,"mtime":1606559364013,"results":"10","hashOfConfig":"9"},{"size":3849,"mtime":1606921289690,"results":"11","hashOfConfig":"9"},{"size":900,"mtime":1606576467646,"results":"12","hashOfConfig":"9"},{"size":1085,"mtime":1606921298573,"results":"13","hashOfConfig":"9"},{"size":760,"mtime":1606918135798,"results":"14","hashOfConfig":"9"},{"size":338,"mtime":1606918427030,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tvcuu4",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\form-validator\\src\\index.js",[],"D:\\form-validator\\src\\App.js",[],"D:\\form-validator\\src\\FormSingup.js",["31"],"D:\\form-validator\\src\\useForm.js",["32"],"import {useState, useEffect} from \"react\";\r\n\r\nconst useForm = (callback, validate) => {\r\n    const [values, setValues] = useState({\r\n        firstName:\"\",\r\n        lastName:\"\",\r\n        password:\"\",\r\n        password2:\"\"\r\n    })\r\n    const [errors, setErrors] = useState({});\r\n    const [isSubmitting, setIsSubmitting] = useState(false)\r\n\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]:value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        setErrors(validate(values));\r\n        setIsSubmitting(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(errors).length === 0 &&\r\n        isSubmitting) {\r\n            callback()\r\n        }\r\n    },\r\n    [errors]\r\n    );\r\n\r\n    return {handleChange, values, handleSubmit, errors}\r\n}\r\n\r\nexport default useForm;","D:\\form-validator\\src\\validateInfo.js",["33"],"D:\\form-validator\\src\\Form.js",[],"D:\\form-validator\\src\\FormSuccess.js",["34"],{"ruleId":"35","severity":1,"message":"36","line":86,"column":73,"nodeType":"37","endLine":86,"endColumn":85},{"ruleId":"38","severity":1,"message":"39","line":35,"column":5,"nodeType":"40","endLine":35,"endColumn":13,"suggestions":"41"},{"ruleId":"42","severity":1,"message":"43","line":30,"column":33,"nodeType":"44","messageId":"45","endLine":30,"endColumn":35},{"ruleId":"46","severity":1,"message":"47","line":8,"column":7,"nodeType":"37","endLine":8,"endColumn":77},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callback' and 'isSubmitting'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["48"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",{"desc":"49","fix":"50"},"Update the dependencies array to be: [callback, errors, isSubmitting]",{"range":"51","text":"52"},[795,803],"[callback, errors, isSubmitting]"]